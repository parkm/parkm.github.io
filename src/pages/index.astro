---
import Layout from "../layouts/Layout.astro";
import ProjectCard from "../components/ProjectCard.astro";
import CanopyLogo from "../components/CanopyLogo.astro";
import InstructureLogo from "../components/InstructureLogo.astro";
import SettingsMenu from "../components/SettingsMenu.astro";
import GithubIcon from "../components/GithubIcon.astro";
import LinkedinIcon from "../components/LinkedinIcon.astro";
import GameOfLife from "../components/GameOfLife/GameOfLife.astro";

const personalInfo = {
  name: "Parker Miller",
  description:
    "I'm a front-end developer passionate about creating robust web applications with codebases that emphasize readability, maintainability, and extensibility. I also like to dabble in music production and game development.",
  github: "https://github.com/parkm",
  linkedin: "https://linkedin.com/in/parker-miller-381ab3196/",
};

const projects: {
  title: string;
  description: string;
  image: string;
  link: string;
}[] = [
  //{
  //  title: "Project 1",
  //  description: "Project 1 description",
  //  image: "/path/to/project1-image.jpg",
  //  link: "https://project1-link.com",
  //},
];
---

<Layout title={`${personalInfo.name} - Front-end Developer`}>
  <header class="hero-section">
    <GameOfLife />
    <div class="hero-backdrop">
      <div class="hero-content">
        <div class="hero-header">
          <div>
            <h1><a href={personalInfo.github} class="name-link">{personalInfo.name}</a></h1>
            <a href={personalInfo.linkedin} class="job-title-link">Front-end Developer</a>
          </div>
          <div class="flex items-center gap-4">
              <GithubIcon href={personalInfo.github} width={32} height={32} />
              <LinkedinIcon href={personalInfo.linkedin} width={32} height={32} />
          </div>
        </div>
      </div>
    </div>
    <SettingsMenu />
  </header>

  <main>
    <section aria-labelledby="about-me" class="fade-in-section">
      <h2 id="about-me">About Me</h2>
      <div class="intro-card">
        <p>{personalInfo.description}</p>
        <nav aria-label="Social links">
          <ul class="social-links">
            <li>
              <GithubIcon href={personalInfo.github} width={24} height={24} />
            </li>
            <li>
              <LinkedinIcon
                href={personalInfo.linkedin}
                width={24}
                height={24}
              />
            </li>
          </ul>
        </nav>
      </div>
    </section>

    <section aria-labelledby="work-experience" class="fade-in-section">
      <h2 id="work-experience">Work Experience</h2>
      <div class="flex flex-col gap-16 mt-8">
        <section aria-labelledby="canopy" class="flex flex-col gap-8">
          <CanopyLogo fill="white" height="4rem" />
          <div class="time-period">Aug 2021 - Present</div>
          <p>
            An accounting practice management application utilizing React and a
            microservices architecture for the front-end.
            I oversaw the implementation and maintenance of core features
            such as CRM, email and calendar integrations, and a comment feed
            system.
            </p>
          <p>
Additionally, contributed to key infrastructure initiatives, including implementing @tanstack/react-query for caching and server state management, migrating hundreds of Enzyme tests to support updating React to its latest version, and creating a testing utility library to streamline test writing. Implemented various infrastructure components, including a high-performance dynamic table built for consistency and flexibility while minimizing complexity.
          </p>
        </section>
        <section aria-labelledby="instructure" class="flex flex-col gap-8">
          <InstructureLogo height="4rem" />
          <div class="time-period">Jul 2016 - Jul 2021</div>
          <p>
            The company behind the Canvas online learning management system.
            Here I worked in professional services creating and maintaining
            numerous custom integrations for the Canvas LMS. I worked fullstack
            using Ruby on Rails, PostgreSQL, and React.
          </p>
        </section>
        <section aria-labelledby="personal-projects" class="project-grid">
          <h3 id="personal-projects" class="sr-only">Personal Projects</h3>
          {
            projects.map((project) => (
              <ProjectCard
                title={project.title}
                description={project.description}
                image={project.image}
                link={project.link}
              />
            ))
          }
        </section>
      </div>
    </section>
  </main>
  <footer>
    <span>Â© {new Date().getFullYear()} Parker Miller</span>
  </footer>
</Layout>

<style>
  p {
    font-weight: 200;
    color: var(--p-text-color);
  }

  .hero-section {
    height: 100svh;
    position: sticky;
    top: calc(-100svh + 6rem);
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    color: white;
    border-bottom: 1px solid var(--border-color);
  }

  #gameOfLife {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 1;
    z-index: 10;
    background: black;
  }

  .hero-backdrop {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 20;
  }

  .hero-content {
    position: relative;
    z-index: 30;
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: flex-start;
    margin-bottom: 10rem;
    height: 100%;
  }

  .hero-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    padding: 1rem;
    background: linear-gradient(
      to top,
      rgba(0, 0, 0, 0.8) 47%,
      rgba(0, 0, 0, 0) 100%
    );
  }

  .hero-content h1 {
    font-size: 2rem;
    margin-bottom: 0.5rem;
    text-shadow: black 5px 5px;
  }

  .hero-content p {
    font-size: 1rem;
    text-shadow: black 3px 3px;
  }

  .name-link, .job-title-link {
    text-decoration: none;
    color: inherit;
    display: inline-block;
    position: relative;
    transition: opacity 0.2s ease, transform 0.2s ease;
  }

  .name-link:hover, .job-title-link:hover {
    opacity: 0.85;
    transform: translateY(-1px);
  }

  .hero-section {
    box-shadow: black 1px 2px 20px 0px;
  }

  main {
    margin: auto;
    margin-top: 4rem;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }

  h1 {
    font-size: 4rem;
    font-weight: 700;
    line-height: 1;
    text-align: center;
    margin-bottom: 1rem;
  }

  h2 {
    font-size: 3.0rem;
    font-weight: 300;
    margin-bottom: 1rem;
    text-shadow: black 5px 5px 4px;
    border-bottom: 1px solid var(--border-color);
  }

  footer {
    min-height: 3rem;
    background: rgba(var(--accent-light), 0.1);
    border-top: 1px solid var(--border-color);
    padding: 1rem;
    color: #b5b5b5;
    margin-top: 2rem;
  }

  .time-period {
    border-left: 1px solid var(--border-color);
    padding-left: 1.25rem;
  }

  .intro-card {
    background: rgba(var(--accent-light), 0.1);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    margin-bottom: 2rem;
    overflow: hidden;
  }

  .intro-card p {
    padding: 1.5rem 1.5rem 0;
  }

  .social-links {
    display: flex;
    justify-content: center;
    gap: 1rem;
    list-style: none;
    padding: 1rem 0;
    margin-top: 1.5rem;
    background: rgb(0 0 0 / 23%);
    border-top: 1px solid var(--border-color);
  }

  .social-links li {
    transition: transform 0.2s ease;
  }

  .social-links li:hover {
    transform: translateY(-2px);
  }

  .project-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }

  .fade-in-section {
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
  }

  .fade-in-section.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  const observer = new IntersectionObserver(handleIntersection, {
    root: null,
    rootMargin: "0px",
    threshold: 0.1,
  });

  const sections = document.querySelectorAll(".fade-in-section");
  sections.forEach((section) => observer.observe(section));

  function handleIntersection(
    entries: IntersectionObserverEntry[],
    observer: IntersectionObserver,
  ) {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("is-visible");
        observer.unobserve(entry.target);
      }
    });
  }
</script>
